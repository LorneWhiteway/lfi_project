import math

achOutName      = "example"

# Memory and performance
bMemUnordered   = 1    # iOrder replaced by potential and group id
bNewKDK         = 1    # No accelerations in the particle, dual tree possible
bDualTree       = 1    # Use two trees

# Initial Condition
dBoxSize        = 1070       # Mpc/h
nGrid           = 32         # Simulation has nGrid^3 particles
b2LPT           = 1          # second order IC
iSeed           = 314159265  # Random seed
dRedFrom        = 49         # Starting redshift

# Cosmology
achTfFile       = "../../data/specific_cosmology_01_transfer_function.dat"
h               = 0.6736
dOmega0         = 0.26
dLambda         = 0.74
dSigma8         = 0.84
dSpectral       = 0.9649

iStartStep      = 0
nSteps          = 800  # was 750
dRedTo          = 0
nSteps10        = 8    # Base steps to z=10
dRedshiftLCP    = 3.0  # Starting redshift to output light cone particles

# Lightcone 
bLightCone      = 1    # Output a lightcone
nSideHealpix    = 32   # NSide for output lightcone healpix maps.

# Logging/Output
iLogInterval    = 1
iOutInterval    = 1
#iCheckInterval = 10
bDoDensity      = 0
bVDetails       = 1
dHubble0        = math.sqrt(math.pi*8/3)

bOverwrite      = 1
bParaRead       = 1    # Read in parallel
bParaWrite      = 0    # Write in parallel (does not work on all file systems)
#nParaRead      = 8    # Limit number of simultaneous readers to this
#nParaWrite     = 8    # Limit number of simultaneous writers to this

# Cosmological Simulation
bComove         = 1     # Use comoving coordinates
bPeriodic       = 1     # with a periodic box
bEwald          = 1     # enable Ewald periodic boundaries

# Accuracy Parameters
bEpsAccStep     = 1       # Choose eps/a timestep criteria
dTheta          = 0.40    # accuracy of forces for z > 20
dTheta20        = 0.55    # accuracy of forces for z > 2
dTheta2         = 0.70    # accuracy of forces for z <= 2
